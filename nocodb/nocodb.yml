version: "3.7"
networks:
  traefik_proxy:
    name: traefik_proxy
    external: true
services:
  nocodb:
    depends_on:
      - nocodb-db
    environment:
      - "NC_DB=pg://nocodb-db:5432?u=${DATABASE_USER}&p=${DATABASE_PW}&d=${DATABASE_NAME}"
      - "NC_PUBLIC_URL=https://nocodb.${DOMAINNAME}"
      - NC_DISABLE_TELE=true
    image: "nocodb/nocodb:latest"
    labels:
      - "traefik.enable=true"
      - 'traefik.docker.network=traefik_proxy'
      - "traefik.http.routers.nocodb.tls=true"
      - "traefik.http.routers.nocodb.rule=Host(`nocodb.${DOMAINNAME}`)"
      - "traefik.http.routers.nocodb.entrypoints=https"
      - 'traefik.http.routers.nocodb.tls.certresolver=${CERT_RESOLVER}'
      - 'traefik.http.routers.nocodb.middlewares=no-auth-secured@file'
      - 'traefik.http.services.nocodb.loadbalancer.server.port=8080'
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - traefik_proxy
    restart: always
    volumes:
      - "nocodb-data:/usr/app/data"
  nocodb-db:
    environment:
      POSTGRES_DB: "${DATABASE_NAME}"
      POSTGRES_PASSWORD: "${DATABASE_PW}"
      POSTGRES_USER: "${DATABASE_USER}"
    healthcheck:
      interval: 10s
      retries: 10
      test: "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"
      timeout: 2s
    image: postgres:16.1
    networks:
      - traefik_proxy
    restart: always
    volumes:
      - "nocodb-db:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
  watchtower:
    command: "--schedule \"0 5 * * *\" --cleanup --label-enable"
    image: containrrr/watchtower
    labels:
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - traefik_proxy
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
volumes:
  letsencrypt:
    name: traefik-letsencrypt
  nocodb-data:
    name: nocodb-data
  nocodb-db:
    name: nocodb-db
