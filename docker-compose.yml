services:
  engine:
    image: easybot
    container_name: 'easybot_core'
    build: .
    environment:
      REDIS_URL: redis://redis:6379
      REDIS_DB: 0
      REDIS_PASSWORD: easybot-pro-redis
    env_file:
      - .env
    volumes:
      - ./:/home/app/:ro
      - ${HOME}/.local/share/mkcert/rootCA.pem:/certs/rootCA.pem:ro
    networks:
      - easybot
      - traefik_proxy
    external_links:
      - traefik:console.localhost
    command: [ "python", "-m", "app.engine" ]
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  redis:
    image: docker.io/redis:7.0
    container_name: 'easybot_redis'
    environment:
      REDIS_PASSWORD: easybot-pro-redis
    networks:
      - easybot
    volumes:
      - easybot_redis_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 1s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  redis-gui:
    image: docker.io/redislabs/redisinsight:latest
    container_name: 'easybot_redis_gui'
    networks:
      - easybot
      - traefik_proxy
    environment:
      RITRUSTEDORIGINS: "https://redis.${SERVER_NAME}"
    labels:
      - "traefik.enable=true"
      - 'traefik.docker.network=traefik_proxy'
      - "traefik.http.routers.redis-gui.tls=true"
      - "traefik.http.routers.redis-gui.entrypoints=https"
      - "traefik.http.routers.redis-gui.rule=Host(`redis.${SERVER_NAME}`)"
      - 'traefik.http.routers.redis-gui.middlewares=no-auth-secured@file'
      - "traefik.http.services.redis-gui.loadbalancer.server.port=8001"


volumes:
  easybot_redis_data:

networks:
  easybot:
  traefik_proxy:
    external: true
